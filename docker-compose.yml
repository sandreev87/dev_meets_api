version: '3.9'

services:

  dm_postgres:
    container_name: postgres
    image: postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    networks:
      - dm
  dm_redis:
    image: "redis:latest"
    container_name: redis
    hostname: redis
    volumes:
      - redisDB:/var/lib/data
    networks:
      - dm
    ports:
      - "6378:6379"
  auth:
    build:
      context: .
      dockerfile: auth/Dockerfile
    container_name: auth
    image: auth
    environment:
      - ENV
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - "8082:8082"
    depends_on:
      - dm_postgres
      - dm_redis
    networks:
      - dm

  nginx-entrypoint:
    image: nginx:latest
    hostname: nginx-entrypoint
    container_name: nginx-entrypoint
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    ports:
      - 80:80
    volumes:
      - ./entrypoint/nginx/local.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dm

  rooms1:
    build:
      context: .
      dockerfile: rooms/Dockerfile
    container_name: rooms1
    image: rooms
    environment:
      - HTTP_PORT=8083
      - ENV
    ports:
      - "8083:8083"
    networks:
      - dm

  rooms2:
    build:
      context: .
      dockerfile: rooms/Dockerfile
    container_name: rooms2
    image: rooms
    environment:
      - HTTP_PORT=8084
      - ENV
    ports:
      - "8084:8084"
    networks:
      - dm

  rooms3:
    build:
      context: .
      dockerfile: rooms/Dockerfile
    container_name: rooms3
    image: rooms
    environment:
      - HTTP_PORT=8085
      - ENV
    ports:
      - "8085:8085"
    networks:
      - dm
networks:
  dm:
volumes:
  pg-data:
  redisDB: